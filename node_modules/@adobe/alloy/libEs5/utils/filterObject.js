"use strict";

exports.default = void 0;
var _isEmptyObject = require("./isEmptyObject");
var _isNil = require("./isNil");
var _isObject = require("./isObject");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; } /*
                                                                                                                                                                                                                  Copyright 2022 Adobe. All rights reserved.
                                                                                                                                                                                                                  This file is licensed to you under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                  you may not use this file except in compliance with the License. You may obtain a copy
                                                                                                                                                                                                                  of the License at http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                  
                                                                                                                                                                                                                  Unless required by applicable law or agreed to in writing, software distributed under
                                                                                                                                                                                                                  the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
                                                                                                                                                                                                                  OF ANY KIND, either express or implied. See the License for the specific language
                                                                                                                                                                                                                  governing permissions and limitations under the License.
                                                                                                                                                                                                                  */
/**
 * Given an object and a function that takes a value and returns a predicate, filter out
 * all non-object deeply nested values that do not pass the predicate.
 *
 * Example: filterObject({ a: 2, b: { c: 6 } }, (val) => val > 5) returns { b { c: 6 } }
 *
 * @param {*} obj
 * @param {* => boolean} predicate a function that takes a value and return a boolean,
 * representing if it should be included in the result object or not.
 * @returns A copy of the original object with the values that fail the predicate, filtered out.
 */
var filterObject = function filterObject(obj, predicate) {
  if ((0, _isNil.default)(obj) || !(0, _isObject.default)(obj)) {
    return obj;
  }
  return Object.keys(obj).reduce(function (result, key) {
    var value = obj[key];
    if ((0, _isObject.default)(value)) {
      // value is object, go deeper
      var filteredValue = filterObject(value, predicate);
      if ((0, _isEmptyObject.default)(filteredValue)) {
        return result;
      }
      return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, key, filteredValue));
    }
    // value is not an object, test predicate
    if (predicate(value)) {
      return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, key, value));
    }
    return result;
  }, {});
};
var _default = filterObject;
exports.default = _default;