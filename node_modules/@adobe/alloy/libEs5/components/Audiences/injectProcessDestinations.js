"use strict";

exports.default = void 0;
var _utils = require("../../utils");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; } /*
                                                                                                                                                                                                                  Copyright 2019 Adobe. All rights reserved.
                                                                                                                                                                                                                  This file is licensed to you under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                  you may not use this file except in compliance with the License. You may obtain a copy
                                                                                                                                                                                                                  of the License at http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                  
                                                                                                                                                                                                                  Unless required by applicable law or agreed to in writing, software distributed under
                                                                                                                                                                                                                  the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
                                                                                                                                                                                                                  OF ANY KIND, either express or implied. See the License for the specific language
                                                                                                                                                                                                                  governing permissions and limitations under the License.
                                                                                                                                                                                                                  */
var createResultLogMessage = function createResultLogMessage(urlDestination, success) {
  return "URL destination " + (success ? "succeeded" : "failed") + ": " + urlDestination.spec.url;
};
var _default = function _default(_ref) {
  var fireReferrerHideableImage = _ref.fireReferrerHideableImage,
    logger = _ref.logger,
    cookieJar = _ref.cookieJar,
    isPageSsl = _ref.isPageSsl;
  var extraCookieOptions = isPageSsl ? {
    sameSite: "none",
    secure: true
  } : {};
  var processCookies = function processCookies(destinations) {
    var cookieDestinations = destinations.filter(function (dest) {
      return dest.type === "cookie";
    });
    cookieDestinations.forEach(function (dest) {
      var _dest$spec = dest.spec,
        name = _dest$spec.name,
        value = _dest$spec.value,
        domain = _dest$spec.domain,
        ttlDays = _dest$spec.ttlDays;
      cookieJar.set(name, value || "", _objectSpread({
        domain: domain || "",
        expires: ttlDays || 10
      }, extraCookieOptions));
    });
  };
  var processUrls = function processUrls(destinations) {
    var urlDestinations = destinations.filter(function (dest) {
      return dest.type === "url";
    });
    return Promise.all(urlDestinations.map(function (urlDestination) {
      return fireReferrerHideableImage(urlDestination.spec).then(function () {
        logger.info(createResultLogMessage(urlDestination, true));
      }).catch(function () {
        // We intentionally do not throw an error if destinations fail. We
        // consider it a non-critical failure and therefore do not want it to
        // reject the promise handed back to the customer.
      });
    })).then(_utils.noop);
  };
  return function (destinations) {
    processCookies(destinations);
    return processUrls(destinations);
  };
};
exports.default = _default;