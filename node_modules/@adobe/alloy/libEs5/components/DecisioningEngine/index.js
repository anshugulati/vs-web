"use strict";

exports.default = void 0;
var _utils = require("../../utils");
var _createOnResponseHandler = require("./createOnResponseHandler");
var _createDecisionProvider = require("./createDecisionProvider");
var _createApplyResponse = require("./createApplyResponse");
var _createEventRegistry = require("./createEventRegistry");
var _createContextProvider = require("./createContextProvider");
var _createSubscribeRulesetItems = require("./createSubscribeRulesetItems");
var _constants = require("./constants");
var _createEvaluateRulesetsCommand = require("./createEvaluateRulesetsCommand");
var _utils2 = require("./utils");
var _validation = require("../../utils/validation");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; } /*
                                                                                                                                                                                                                  Copyright 2023 Adobe. All rights reserved.
                                                                                                                                                                                                                  This file is licensed to you under the Apache License, Version 2.0 (the "License");
                                                                                                                                                                                                                  you may not use this file except in compliance with the License. You may obtain a copy
                                                                                                                                                                                                                  of the License at http://www.apache.org/licenses/LICENSE-2.0
                                                                                                                                                                                                                  
                                                                                                                                                                                                                  Unless required by applicable law or agreed to in writing, software distributed under
                                                                                                                                                                                                                  the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
                                                                                                                                                                                                                  OF ANY KIND, either express or implied. See the License for the specific language
                                                                                                                                                                                                                  governing permissions and limitations under the License.
                                                                                                                                                                                                                  */
var createDecisioningEngine = function createDecisioningEngine(_ref) {
  var config = _ref.config,
    createNamespacedStorage = _ref.createNamespacedStorage,
    consent = _ref.consent;
  var orgId = config.orgId,
    personalizationStorageEnabled = config.personalizationStorageEnabled;
  var storage = createNamespacedStorage((0, _utils.sanitizeOrgIdForCookieName)(orgId) + ".decisioning.");
  if (!personalizationStorageEnabled) {
    (0, _utils2.clearLocalStorage)(storage.persistent);
  }
  var eventRegistry = (0, _createEventRegistry.default)({
    storage: (0, _utils2.createInMemoryStorage)()
  });
  var decisionProvider = (0, _createDecisionProvider.default)({
    eventRegistry: eventRegistry
  });
  var contextProvider = (0, _createContextProvider.default)({
    eventRegistry: eventRegistry,
    window: window
  });
  var evaluateRulesetsCommand = (0, _createEvaluateRulesetsCommand.default)({
    contextProvider: contextProvider,
    decisionProvider: decisionProvider
  });
  var subscribeRulesetItems = (0, _createSubscribeRulesetItems.default)();
  var applyResponse;
  return {
    lifecycle: {
      onDecision: function onDecision(_ref2) {
        var propositions = _ref2.propositions;
        subscribeRulesetItems.refresh(propositions);
      },
      onComponentsRegistered: function onComponentsRegistered(tools) {
        applyResponse = (0, _createApplyResponse.default)(tools.lifecycle);
        if (personalizationStorageEnabled) {
          consent.awaitConsent().then(function () {
            eventRegistry.setStorage(storage.persistent);
          }).catch(function () {
            if (storage) {
              (0, _utils2.clearLocalStorage)(storage.persistent);
            }
          });
        }
      },
      onBeforeEvent: function onBeforeEvent(_ref3) {
        var _objectSpread2;
        var event = _ref3.event,
          renderDecisions = _ref3.renderDecisions,
          _ref3$personalization = _ref3.personalization,
          personalization = _ref3$personalization === void 0 ? {} : _ref3$personalization,
          _ref3$onResponse = _ref3.onResponse,
          onResponse = _ref3$onResponse === void 0 ? _utils.noop : _ref3$onResponse;
        var _personalization$deci = personalization.decisionContext,
          decisionContext = _personalization$deci === void 0 ? {} : _personalization$deci;
        onResponse((0, _createOnResponseHandler.default)({
          renderDecisions: renderDecisions,
          decisionProvider: decisionProvider,
          applyResponse: applyResponse,
          event: event,
          personalization: personalization,
          decisionContext: contextProvider.getContext(_objectSpread((_objectSpread2 = {}, _defineProperty(_objectSpread2, _constants.CONTEXT_KEY.TYPE, _constants.CONTEXT_EVENT_TYPE.EDGE), _defineProperty(_objectSpread2, _constants.CONTEXT_KEY.SOURCE, _constants.CONTEXT_EVENT_SOURCE.REQUEST), _objectSpread2), decisionContext))
        }));
        eventRegistry.addExperienceEdgeEvent(event);
      }
    },
    commands: {
      evaluateRulesets: {
        run: function run(_ref4) {
          var _objectSpread3;
          var renderDecisions = _ref4.renderDecisions,
            _ref4$personalization = _ref4.personalization,
            personalization = _ref4$personalization === void 0 ? {} : _ref4$personalization;
          var _personalization$deci2 = personalization.decisionContext,
            decisionContext = _personalization$deci2 === void 0 ? {} : _personalization$deci2;
          return evaluateRulesetsCommand.run({
            renderDecisions: renderDecisions,
            decisionContext: _objectSpread((_objectSpread3 = {}, _defineProperty(_objectSpread3, _constants.CONTEXT_KEY.TYPE, _constants.CONTEXT_EVENT_TYPE.RULES_ENGINE), _defineProperty(_objectSpread3, _constants.CONTEXT_KEY.SOURCE, _constants.CONTEXT_EVENT_SOURCE.REQUEST), _objectSpread3), decisionContext),
            applyResponse: applyResponse
          });
        },
        optionsValidator: evaluateRulesetsCommand.optionsValidator
      },
      subscribeRulesetItems: subscribeRulesetItems.command
    }
  };
};
createDecisioningEngine.namespace = "DecisioningEngine";
createDecisioningEngine.configValidators = (0, _validation.objectOf)({
  personalizationStorageEnabled: (0, _validation.boolean)().default(false)
});
var _default = createDecisioningEngine;
exports.default = _default;